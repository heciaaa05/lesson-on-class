#include <iostream>
#include <iomanip>
using namespace std;


struct sinhvien {
    char masv[10];
    char hoten[30];
    char diachi[20];
    float diemTB;
};


struct Node {
    sinhvien infor;
    Node* next;
};

typedef Node* TRO;

//nhap 1 sv
void nhapThongTin(sinhvien &sv) {
    cout << "Nhap ma sv: ";
    cin.ignore();
    cin.getline(sv.masv, 10);

    cout << "Nhap ho ten: ";
    cin.getline(sv.hoten, 30);

    cout << "Nhap dia chi: ";
    cin.getline(sv.diachi, 20);

    cout << "Nhap diem TB: ";
    cin >> sv.diemTB;
}

// nhap
void nhapDS(TRO &L) {
    sinhvien x;
    TRO Q = NULL, P;
    int n;

    cout << "Nhap so luong sinh vien: ";
    cin >> n;

    for (int i = 0; i < n; ++i) {
        cout << "\nNhap sinh vien thu " << i + 1 << ":\n";
        nhapThongTin(x);

        P = new Node;
        P->infor = x;
        P->next = NULL;

        if (L == NULL) {
            L = P;
        } else {
            Q->next = P;
        }
        Q = P;
    }
}

// xuat
void xuat(TRO L) {
    cout << left << setw(10) << "Ma SV"
         << setw(25) << "Ho ten"
         << setw(20) << "Dia chi"
         << setw(10) << "Diem TB" << endl;

    TRO Q = L;
    while (Q != NULL) {
        sinhvien x = Q->infor;
        cout << left << setw(10) << x.masv
             << setw(25) << x.hoten
             << setw(20) << x.diachi
             << setw(10) << fixed << setprecision(2) << x.diemTB << endl;
        Q = Q->next;
    }
}
//tim tro tro den max diemTB
 TRO max1(TRO L) {
    if (L == NULL) return NULL;

    TRO maxSV = L;
    TRO Q = L;

    // Duyá»‡t
    while (Q != NULL) {
        if (Q->infor.diemTB > maxSV->infor.diemTB) {
            maxSV = Q;
        }
        Q = Q->next;
    }

    return maxSV;
}

//xoa max
void deleteMax(TRO &L) {

    TRO maxSV = max1(L);
    TRO P = NULL, Q = L;

    //neu la sv dau tien
    if (maxSV == L) {
        L = L->next;  //update list
        delete maxSV;  // delete first node
        return;
    }

    //truong hop con lai
    while (Q != NULL && Q != maxSV) {
        P = Q;
        Q = Q->next;
    }
    if (Q == maxSV) {
        P->next = Q->next;
        delete maxSV;
    }
}

//chen ptu truoc max
void chen(TRO &L, sinhvien newSV){
    TRO maxSV = max1(L);
    TRO P = new Node;
    P->infor = newSV;
    P->next = NULL;

    TRO Q = NULL;
    while (L != maxSV){
        Q=L;
        L=L->next;
    }
    if (Q != NULL){
        Q->next=P;
        P->next=maxSV;
    }
}


int main() {
    TRO L = NULL;
    TRO Q;
    //nhap
    cout << "=== Nhap danh sach sinh vien ===" << endl;
    nhapDS(L);
    //xuat
    cout << "\n=== Danh sach sinh vien vua nhap ===" << endl;
    xuat(L);
    cout<<endl;
    //tim max
    TRO maxSV=max1(L);
    if (maxSV != NULL) {
    cout<< "Diem TB: "<< maxSV->infor.diemTB << endl;
    //xoa max
    deleteMax(L);
     xuat(L);
}
  //chen truoc max
   sinhvien newSV;
    nhapThongTin(newSV);
    chen(L, newSV);
    xuat
    return 0;
}
